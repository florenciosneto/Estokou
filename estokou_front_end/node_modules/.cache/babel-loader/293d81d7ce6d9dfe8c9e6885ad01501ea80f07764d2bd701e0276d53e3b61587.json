{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Downloads\\\\Projeto\\\\Estokou\\\\estokou_front_end\\\\src\\\\components\\\\DropdownProd.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport api from \"../servico/App\"; // Certifique-se de importar sua instância de API\nimport Profile from './Profiles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DropdownProd() {\n  _s();\n  const [estoques, setEstoques] = useState([]); // Estado para armazenar os estoques\n  const [selectedStorageId, setSelectedStorageId] = useState(null);\n  const [selectedStorageName, setSelectedStorageName] = useState(null); // Estado para o ID do estoque selecionado\n\n  // Fetch estoques ao montar o componente\n  useEffect(() => {\n    const fetchEstoques = async () => {\n      try {\n        const response = await api.get('/api/estoques?id_usuario=' + Profile.getId()); // Certifique-se de que o endpoint correto está sendo usado\n        setEstoques(response.data); // Armazena os estoques no estado\n      } catch (err) {\n        console.error(\"Erro ao buscar estoques: \", err);\n      }\n    };\n    fetchEstoques();\n  }, []);\n\n  // Atualiza o estoque selecionado\n  function handleTradeStorage(id) {\n    Profile.setStorageId(id); // Atualiza no objeto Profile\n    setSelectedStorageId(id); // Atualiza no estado local\n    window.location.reload();\n  }\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      children: \"Trocar estoque\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      children: estoques.length > 0 ?\n      // Mapeia os estoques e cria um item para cada um\n      estoques.map(estoque => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        active: estoque.id === selectedStorageId // Marca a opção selecionada\n        ,\n        active: estoque.nome === se,\n        onClick: () => handleTradeStorage(estoque.id),\n        children: [estoque.nome, \" \"]\n      }, estoque.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        disabled: true,\n        children: \"Voc\\xEA n\\xE3o tem estoques cadastrados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this) // Exibe uma mensagem enquanto os estoques são carregados\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(DropdownProd, \"omEwBNdCuXf92l3db05XHMTQh+0=\");\n_c = DropdownProd;\nexport default DropdownProd;\nvar _c;\n$RefreshReg$(_c, \"DropdownProd\");","map":{"version":3,"names":["useEffect","useState","Dropdown","api","Profile","jsxDEV","_jsxDEV","DropdownProd","_s","estoques","setEstoques","selectedStorageId","setSelectedStorageId","selectedStorageName","setSelectedStorageName","fetchEstoques","response","get","getId","data","err","console","error","handleTradeStorage","id","setStorageId","window","location","reload","children","Toggle","variant","fileName","_jsxFileName","lineNumber","columnNumber","Menu","length","map","estoque","Item","active","nome","se","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Users/Downloads/Projeto/Estokou/estokou_front_end/src/components/DropdownProd.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport api from \"../servico/App\"; // Certifique-se de importar sua instância de API\r\nimport Profile from './Profiles';\r\n\r\nfunction DropdownProd() {\r\n    const [estoques, setEstoques] = useState([]); // Estado para armazenar os estoques\r\n    const [selectedStorageId, setSelectedStorageId] = useState(null);\r\n    const [selectedStorageName, setSelectedStorageName] = useState(null); // Estado para o ID do estoque selecionado\r\n\r\n    // Fetch estoques ao montar o componente\r\n    useEffect(() => {\r\n        const fetchEstoques = async () => {\r\n            try {\r\n                const response = await api.get('/api/estoques?id_usuario=' + Profile.getId()); // Certifique-se de que o endpoint correto está sendo usado\r\n                setEstoques(response.data); // Armazena os estoques no estado\r\n            } catch (err) {\r\n                console.error(\"Erro ao buscar estoques: \", err);\r\n            }\r\n        };\r\n        fetchEstoques();\r\n    }, []);\r\n\r\n    // Atualiza o estoque selecionado\r\n    function handleTradeStorage(id) {\r\n        Profile.setStorageId(id); // Atualiza no objeto Profile\r\n        setSelectedStorageId(id); // Atualiza no estado local\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <Dropdown>\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                Trocar estoque\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                {estoques.length > 0 ? (\r\n                    // Mapeia os estoques e cria um item para cada um\r\n                    estoques.map((estoque) => (\r\n                        <Dropdown.Item \r\n                            key={estoque.id} \r\n                            active={estoque.id === selectedStorageId} // Marca a opção selecionada\r\n                            active={estoque.nome === se}\r\n                            onClick={() => handleTradeStorage(estoque.id)}\r\n                        >\r\n                            {estoque.nome} {/* Ajuste para a propriedade que representa o nome do estoque */}\r\n                        </Dropdown.Item>\r\n                    ))\r\n                ) : (\r\n                    <Dropdown.Item disabled>Você não tem estoques cadastrados</Dropdown.Item> // Exibe uma mensagem enquanto os estoques são carregados\r\n                )}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nexport default DropdownProd;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}