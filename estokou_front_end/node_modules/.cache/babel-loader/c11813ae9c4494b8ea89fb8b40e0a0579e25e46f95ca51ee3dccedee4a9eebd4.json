{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Downloads\\\\Projeto\\\\Estokou\\\\estokou_front_end\\\\src\\\\components\\\\DropdownProd.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport api from \"../servico/App\"; // Certifique-se de importar sua instância de API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DropdownProd() {\n  _s();\n  const [estoques, setEstoques] = useState([]); // Estado para armazenar os estoques\n\n  // Fetch produtos ao montar o componente\n  useEffect(() => {\n    const fetchEstoques = async () => {\n      try {\n        const response = await api.get('/api/estoques'); // Certifique-se de que o endpoint correto está sendo usado\n        setEstoques(response.data); // Armazena os estoques no estado\n      } catch (err) {\n        console.error(\"Erro ao buscar estoques: \", err);\n      }\n    };\n    fetchEstoques();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      children: \"Trocar estoque\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      children: estoques.length > 0 ?\n      // Mapeia os estoques e cria um item para cada um\n      estoques.map(estoque => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: `#/action-${estoque.id}`,\n        children: [estoque.nome, \" \"]\n      }, estoque.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        disabled: true,\n        children: \"Carregando estoques...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this) // Exibe uma mensagem enquanto os estoques são carregados\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(DropdownProd, \"7sovtst57TPePA/ZUscrivYQa2o=\");\n_c = DropdownProd;\nexport default DropdownProd;\nvar _c;\n$RefreshReg$(_c, \"DropdownProd\");","map":{"version":3,"names":["useEffect","useState","Dropdown","api","jsxDEV","_jsxDEV","DropdownProd","_s","estoques","setEstoques","fetchEstoques","response","get","data","err","console","error","children","Toggle","variant","id","fileName","_jsxFileName","lineNumber","columnNumber","Menu","length","map","estoque","Item","href","nome","disabled","_c","$RefreshReg$"],"sources":["D:/Users/Downloads/Projeto/Estokou/estokou_front_end/src/components/DropdownProd.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport api from \"../servico/App\"; // Certifique-se de importar sua instância de API\r\n\r\nfunction DropdownProd() {\r\n    const [estoques, setEstoques] = useState([]); // Estado para armazenar os estoques\r\n\r\n    // Fetch produtos ao montar o componente\r\n    useEffect(() => {\r\n        const fetchEstoques = async () => {\r\n            try {\r\n                const response = await api.get('/api/estoques'); // Certifique-se de que o endpoint correto está sendo usado\r\n                setEstoques(response.data); // Armazena os estoques no estado\r\n            } catch (err) {\r\n                console.error(\"Erro ao buscar estoques: \", err);\r\n            }\r\n        };\r\n        fetchEstoques();\r\n    }, []);\r\n\r\n    return (\r\n        <Dropdown>\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                Trocar estoque\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                {estoques.length > 0 ? (\r\n                    // Mapeia os estoques e cria um item para cada um\r\n                    estoques.map((estoque) => (\r\n                        <Dropdown.Item key={estoque.id} href={`#/action-${estoque.id}`}>\r\n                            {estoque.nome} {/* Ajuste para a propriedade que representa o nome do estoque */}\r\n                        </Dropdown.Item>\r\n                    ))\r\n                ) : (\r\n                    <Dropdown.Item disabled>Carregando estoques...</Dropdown.Item> // Exibe uma mensagem enquanto os estoques são carregados\r\n                )}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nexport default DropdownProd;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,GAAG,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;QACjDH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;MACnD;IACJ,CAAC;IACDJ,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA,CAACH,QAAQ;IAAAe,QAAA,gBACLZ,OAAA,CAACH,QAAQ,CAACgB,MAAM;MAACC,OAAO,EAAC,SAAS;MAACC,EAAE,EAAC,gBAAgB;MAAAH,QAAA,EAAC;IAEvD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC,eAElBnB,OAAA,CAACH,QAAQ,CAACuB,IAAI;MAAAR,QAAA,EACTT,QAAQ,CAACkB,MAAM,GAAG,CAAC;MAChB;MACAlB,QAAQ,CAACmB,GAAG,CAAEC,OAAO,iBACjBvB,OAAA,CAACH,QAAQ,CAAC2B,IAAI;QAAkBC,IAAI,EAAE,YAAYF,OAAO,CAACR,EAAE,EAAG;QAAAH,QAAA,GAC1DW,OAAO,CAACG,IAAI,EAAC,GAAC;MAAA,GADCH,OAAO,CAACR,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CAClB,CAAC,gBAEFnB,OAAA,CAACH,QAAQ,CAAC2B,IAAI;QAACG,QAAQ;QAAAf,QAAA,EAAC;MAAsB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,CAAC;IAClE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEnB;AAACjB,EAAA,CApCQD,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAsCrB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}